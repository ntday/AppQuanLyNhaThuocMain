<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="vbButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACsAAAA+CAYAAACyRuLoAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAQySURBVGhD7ZrPS5RBGMf37qWDHURM7WAnAwMJRJY1ELXV
        EkykIrAkCi8tnYu8VVAkRdAtgrpFkAQVYXgI+nHqYNGhQ9YfkBFEsebb83lzdN7Zmdd3333f3ZL9wnf3
        nXnmx3efmWdm3vfdjOd5AQpywlnhwhovCWcS4qjZXzkMJjKZgtA7Uzjr3bh5y7t4+Yo3PHLQu3rtup+u
        hLTV25stdnfvXZQ+tun9RmUg0dW1Z+nc+QtyuYETUye9l6/erKUqw/LyN98Rg4P7n0gy0HcUBhL5/MhP
        U1iSYsHS5y8MIZeBvqMwkBCxxbTFguHhA9/lK9B3FAYSUcU+fTZvnZe379xdK/EXi+/e+/kMv46JicNf
        5SvQdxQGElHFksdQ2qiXRaiZB6oqNqpnmZ9mXVBVsZWiYrGCtqGh/CpLl+4tCQZv/vmCFEkOR44e+9HZ
        ufutTpYz0ZATc0CgTv9DFurppqam4qnT0yUbwIhsCnOPHkuxDajhjUoTIrakDH21tOz43dPTOydFSoRC
        36NCP3JtsE2D9vad1IxMsz5t2sCqgWCpY/UwKLCruGATy9ZJflQyEjrIc4Egde1wYIYhcIGGTbGVIkws
        fTGH5bIutmykIrbcQCqXNifEFkvg4YW0aAYeqGgaVBt1sWlh64vlGGgLiiTJTmgilljyxOZvfzSQNA+N
        T/jtm8AWSyy/Pi0oZ5jghNfQ0MAt+7Qk/22xeJZjKc8YstncBymzfgILFdvfP1Bys5cUmK8uscpJaGhu
        bl4ZGBi6J8lwsTSGYBUQSZK2oQldLGCXQ7CU5bGWXSweJT9NsuKYMMUCglzuIF44xdYKNrHksULUxVaC
        uti0EEsst+Zis0YsIEKxu27hObhzp+ECNttddWpi6dB22gebieVskJjYWqEuNi3EEstcpJJrzqrDuWvO
        0qZtTipgs/UbSywFxOYHkg3UwR62GmB3geAzRYFYYmuFuti0EEusOs+65iT52F13EgSga74DbLbgjSWW
        AmKzRiwgHzvlbKBD7C5gM0WBWGLxGIVcnmPJcgkF2F2jArDZ7LHE1gpbXyzDSD4VXSRIXNPk/oOHHu/U
        bPUgtkQCjLnEDiO2TWk7JiLEVtZG8/8NZYtVz6GiUj8D0LCtTBj1QCtbrN6Q+csVTO8p0JbKw+u2iDdH
        Tu//vxfLoyYeIUnZzacBaRpQNO36NCBodBui9LpQFwoRqGCKJVAbG7f/knK8ti0VSwWzQRdt3jO9HkZz
        5JRYviePTxU7OnYtSzn/SSIoEQuIcBrSPWKS4TFXAgU8YqujyGhQxgTPZ8UBq4g0n9E6xdYKeLS1te2j
        XK6LVAQFVxDVAmw0YW/F2/hjhC1qqw12w76+ffzfYFKSpWL5yGZzszywZQ4xDLUgq8jY2PhK6D851i8y
        mVFZy17n8yOfakHeH9heemzQy/wBIDdwKY5d1t0AAAAASUVORK5CYII=
</value>
  </data>
</root>